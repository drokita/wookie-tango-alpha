<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <script type="text/javascript" src="includes/bootstrapTop.js"></script>
</head>

<body>
<%@ page import="com.daverokita.blog.JWT" %>
<%@ page import="java.util.*" %>
<%@ page session="false" %>

<%
    Cookie cookie = null;
    Cookie[] cookies = null;
    cookies = request.getCookies();
    String validated = null;
    String header = "includes/loginHeader.js";
    boolean found = false;
    if (cookies != null) {
        for (int i = 0; i < cookies.length; i++) {
            cookie = cookies[i];
            String jwt = cookie.getValue();
            if(cookie.getName().equals("session")) {
                validated = JWT.checkJWT(jwt);
                if (validated != null ) {
                    header = "includes/defaultHeader.js";
                    found = true;
                } else {
                    header = "includes/loginHeader.js";
                    response.sendRedirect("index.jsp");
                }
            }
        }
    }
    if (found == false) {
        header = "includes/loginHeader.js";
    }
%>

<div>
    <script type="text/javascript">var subject = "<%= validated %>";</script>
    <script type="text/javascript" src="<%= header %>"></script>
    <div class="jumbotron">
        <div class="container">
            <h1>Welcome!</h1>
            <p>
                Welcome to my personal blog.  I am creating this blog for a couple of reasons.  First of all, I am interested in programming.
                I have always been involved in Java, but I really don't spend much time programming.  To become a better professional, I have
                chosen to build my own blog from scratch.  Apart from that, I have a lot of opinions.  Many of these have nothing to do with
                programming at all.  Hopefully you will find something useful while you are here.
            </p>
            <p><a class="btn btn-primary btn-md" href="#" role=""button">Learn More &raquo;</a></p>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-8">
                <h2>Heading</h2>
                <p>My god, please let it end. A ResultSet object is a table of data representing a database
                    result set, which is usually generated by executing a statement that queries the database.
                    For example, the CoffeeTables.viewTable method creates a ResultSet, rs, when it executes
                    the query through the Statement object, stmt. Note that a ResultSet object can be created
                    through any object that implements the Statement interface, including PreparedStatement,
                    CallableStatement, and RowSet.

                    You access the data in a ResultSet object through a cursor. Note that this cursor is not
                    a database cursor. This cursor is a pointer that points to one row of data in the ResultSet.
                    Initially, the cursor is positioned before the first row. The method ResultSet.next moves
                    the cursor to the next row. This method returns false if the cursor is positioned after the
                    last row. This method repeatedly calls the ResultSet.next method with a while loop to iterate
                    through all the data in the ResultSet.

                    This page covers the following topics:

                    ResultSet Interface
                    Retrieving Column Values from Rows
                    Cursors
                    Updating Rows in ResultSet Objects
                    Using Statement Objects for Batch Updates
                    Inserting Rows in ResultSet Objects
                    ResultSet Interface

                    The ResultSet interface provides methods for retrieving and manipulating the results of executed
                    queries, and ResultSet objects can have different functionality and characteristics. These
                    characteristics are type, concurrency, and cursor holdability.

                    ResultSet Types

                    The type of a ResultSet object determines the level of its functionality in two areas: the ways
                    in which the cursor can be manipulated, and how concurrent changes made to the underlying data
                    source are reflected by the ResultSet object.

                    The sensitivity of a ResultSet object is determined by one of three different ResultSet types:
                    </p>
                <p><a class="btn btn-default" href="#" role="button">View details &raquo;</a></p>
            </div>
            <div class="col-md-3">
                <img src="images/biscuits.jpg" class="img-circle" width="300" height="250">
            </div>
        </div>

        <hr>
        <footer>
            <div class="col-md-1"></div>
            <div class="col-md-8">
                <p>&copy; 2016 daverokita.com</p>
            </div>
            <div class="col-md-3"></div>
        </footer>
        </hr>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
                            integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
                            crossorigin="anonymous"></script>
    <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>

</body>
</html>